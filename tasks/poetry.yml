- name: Check poetry existence
  changed_when: "no_poetry.rc != 0"
  failed_when: false
  register: no_poetry
  ansible.builtin.command: "{{ ansible_env.HOME }}/.local/bin/poetry -V"

- name: Install poetry
  when: no_poetry is changed
  ansible.builtin.shell: >
    set -o pipefail &&
    PYENV_ROOT="$HOME/.pyenv" &&
    PATH="$PYENV_ROOT/bin:$PATH" &&
    eval "$(pyenv init --path)"  &&
    eval "$(pyenv init -)" &&
    curl -sSL https://install.python-poetry.org |
    PYENV_VERSION={{ default_user_python_version }} python
  args:
    executable: /bin/bash

- name: Update poetry
  changed_when: "'No dependencies to install or update' not in poetry_updated.stdout"
  register: poetry_updated
  ansible.builtin.command: "{{ ansible_env.HOME }}/.local/bin/poetry self update"

- name: Add poetry path to the .bashrc
  ansible.builtin.blockinfile:
    block: |
      export PATH="$HOME/.local/bin:$PATH"
    insertbefore: BOF
    marker: "# {mark} .local/bin ANSIBLE MANAGED BLOCK"
    path: "{{ ansible_env.HOME }}/.bashrc"

- name: Configure poetry
  ansible.builtin.command: "{{ ansible_env.HOME }}/.local/bin/poetry config virtualenvs.in-project true"
  register: poetry_configured
  changed_when: poetry_configured.rc != 0
  failed_when: poetry_configured.rc != 0
